#!groovy
@Library("Infrastructure") _

properties([
    parameters([
        string(name: 'PRODUCT_NAME', defaultValue: 'ia', description: ''),
        string(name: 'APP', defaultValue: 'case-notifications-api', description: 'Immigration & Asylum case notifications API'),
        string(name: 'TYPE', defaultValue: 'java', description: ''),
        string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
        choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
    ]),
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-case-notifications-api.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

def secrets = [
    'ia-${env}': [

    secret('ia-ccd-frontend-url', 'IA_CCD_FRONTEND_URL'),
    secret('ia-gov-notify-key', 'IA_GOV_NOTIFY_KEY'),

    secret('hearing-centre-bradford-email', 'IA_HEARING_CENTRE_BRADFORD_EMAIL'),
    secret('hearing-centre-manchester-email', 'IA_HEARING_CENTRE_MANCHESTER_EMAIL'),
    secret('hearing-centre-newport-email', 'IA_HEARING_CENTRE_NEWPORT_EMAIL'),
    secret('hearing-centre-taylor-house-email', 'IA_HEARING_CENTRE_TAYLOR_HOUSE_EMAIL'),

    secret('home-office-bradford-email', 'IA_HOME_OFFICE_BRADFORD_EMAIL'),
    secret('home-office-manchester-email', 'IA_HOME_OFFICE_MANCHESTER_EMAIL'),
    secret('home-office-newport-email', 'IA_HOME_OFFICE_NEWPORT_EMAIL'),
    secret('home-office-taylor-house-email', 'IA_HOME_OFFICE_TAYLOR_HOUSE_EMAIL'),

    secret('hearing-centre-bradford-telephone', 'IA_HEARING_CENTRE_BRADFORD_TELEPHONE'),
    secret('hearing-centre-manchester-telephone', 'IA_HEARING_CENTRE_MANCHESTER_TELEPHONE'),
    secret('hearing-centre-newport-telephone', 'IA_HEARING_CENTRE_NEWPORT_TELEPHONE'),
    secret('hearing-centre-taylor-house-telephone', 'IA_HEARING_CENTRE_TAYLOR_HOUSE_TELEPHONE'),

    secret('respondent-evidence-direction-email', 'IA_RESPONDENT_EVIDENCE_DIRECTION_EMAIL'),
    secret('respondent-review-direction-email', 'IA_RESPONDENT_REVIEW_DIRECTION_EMAIL'),
    secret('respondent-non-standard-direction-until-listing-email', 'IA_RESPONDENT_NON_STANDARD_DIRECTION_UNTIL_LISTING_EMAIL'),

    secret('home-office-end-appeal-email', 'IA_HOME_OFFICE_END_APPEAL_EMAIL'),
    secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
    secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
    secret('test-law-firm-a-username', 'TEST_LAW_FIRM_A_USERNAME'),
    secret('test-law-firm-a-password', 'TEST_LAW_FIRM_A_PASSWORD'),
    secret('test-adminofficer-username', 'TEST_ADMINOFFICER_USERNAME'),
    secret('test-adminofficer-password', 'TEST_ADMINOFFICER_PASSWORD'),
    secret('test-homeoffice-apc-username', 'TEST_HOMEOFFICE_APC_USERNAME'),
    secret('test-homeoffice-apc-password', 'TEST_HOMEOFFICE_APC_PASSWORD'),

    secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
    secret('idam-secret', 'IA_IDAM_SECRET'),
    secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
    secret('s2s-secret', 'IA_S2S_SECRET'),
    secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
    secret('ccd-url', 'CCD_URL'),
    secret('dm-url', 'DM_URL'),
    secret('idam-url', 'IDAM_URL'),
    secret('s2s-url', 'S2S_URL')

    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {

    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
}
