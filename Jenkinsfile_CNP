#!groovy
properties([
        [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-case-notifications-api.git'],
        pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "case-notifications-api"

def secrets = [
    'ia-${env}': [
        secret('ia-ccd-frontend-url', 'IA_CCD_FRONTEND_URL'),
        secret('ia-gov-notify-key', 'IA_GOV_NOTIFY_KEY'),

        secret('hearing-centre-bradford-email', 'IA_HEARING_CENTRE_BRADFORD_EMAIL'),
        secret('hearing-centre-manchester-email', 'IA_HEARING_CENTRE_MANCHESTER_EMAIL'),
        secret('hearing-centre-newport-email', 'IA_HEARING_CENTRE_NEWPORT_EMAIL'),
        secret('hearing-centre-taylor-house-email', 'IA_HEARING_CENTRE_TAYLOR_HOUSE_EMAIL'),
        secret('hearing-centre-north-shields-email', 'IA_HEARING_CENTRE_NORTH_SHIELDS_EMAIL'),
        secret('hearing-centre-birmingham-email', 'IA_HEARING_CENTRE_BIRMINGHAM_EMAIL'),
        secret('hearing-centre-hatton-cross-email', 'IA_HEARING_CENTRE_HATTON_CROSS_EMAIL'),
        secret('hearing-centre-glasgow-email', 'IA_HEARING_CENTRE_GLASGOW_EMAIL'),

        secret('home-office-bradford-email', 'IA_HOME_OFFICE_BRADFORD_EMAIL'),
        secret('home-office-manchester-email', 'IA_HOME_OFFICE_MANCHESTER_EMAIL'),
        secret('home-office-newport-email', 'IA_HOME_OFFICE_NEWPORT_EMAIL'),
        secret('home-office-taylor-house-email', 'IA_HOME_OFFICE_TAYLOR_HOUSE_EMAIL'),
        secret('home-office-north-shields-email', 'IA_HOME_OFFICE_NORTH_SHIELDS_EMAIL'),
        secret('home-office-birmingham-email', 'IA_HOME_OFFICE_BIRMINGHAM_EMAIL'),
        secret('home-office-hatton-cross-email', 'IA_HOME_OFFICE_HATTON_CROSS_EMAIL'),
        secret('home-office-glasgow-email', 'IA_HOME_OFFICE_GLASGOW_EMAIL'),

        secret('hearing-centre-bradford-telephone', 'IA_HEARING_CENTRE_BRADFORD_TELEPHONE'),
        secret('hearing-centre-manchester-telephone', 'IA_HEARING_CENTRE_MANCHESTER_TELEPHONE'),
        secret('hearing-centre-newport-telephone', 'IA_HEARING_CENTRE_NEWPORT_TELEPHONE'),
        secret('hearing-centre-taylor-house-telephone', 'IA_HEARING_CENTRE_TAYLOR_HOUSE_TELEPHONE'),
        secret('hearing-centre-north-shields-telephone', 'IA_HEARING_CENTRE_NORTH_SHIELDS_TELEPHONE'),
        secret('hearing-centre-birmingham-telephone', 'IA_HEARING_CENTRE_BIRMINGHAM_TELEPHONE'),
        secret('hearing-centre-hatton-cross-telephone', 'IA_HEARING_CENTRE_HATTON_CROSS_TELEPHONE'),
        secret('hearing-centre-glasgow-telephone', 'IA_HEARING_CENTRE_GLASGOW_TELEPHONE'),

        secret('respondent-evidence-direction-email', 'IA_RESPONDENT_EVIDENCE_DIRECTION_EMAIL'),
        secret('respondent-review-direction-email', 'IA_RESPONDENT_REVIEW_DIRECTION_EMAIL'),
        secret('respondent-non-standard-direction-until-listing-email', 'IA_RESPONDENT_NON_STANDARD_DIRECTION_UNTIL_LISTING_EMAIL'),

        secret('test-caseofficer-username', 'TEST_CASEOFFICER_USERNAME'),
        secret('test-caseofficer-password', 'TEST_CASEOFFICER_PASSWORD'),
        secret('test-law-firm-a-username', 'TEST_LAW_FIRM_A_USERNAME'),
        secret('test-law-firm-a-password', 'TEST_LAW_FIRM_A_PASSWORD'),
        secret('test-adminofficer-username', 'TEST_ADMINOFFICER_USERNAME'),
        secret('test-adminofficer-password', 'TEST_ADMINOFFICER_PASSWORD'),

        secret('test-homeoffice-apc-username', 'TEST_HOMEOFFICE_APC_USERNAME'),
        secret('test-homeoffice-apc-password', 'TEST_HOMEOFFICE_APC_PASSWORD'),
        secret('test-homeoffice-lart-username', 'TEST_HOMEOFFICE_LART_USERNAME'),
        secret('test-homeoffice-lart-password', 'TEST_HOMEOFFICE_LART_PASSWORD'),
        secret('test-homeoffice-pou-username', 'TEST_HOMEOFFICE_POU_USERNAME'),
        secret('test-homeoffice-pou-password', 'TEST_HOMEOFFICE_POU_PASSWORD'),
        secret('test-homeoffice-generic-username', 'TEST_HOMEOFFICE_GENERIC_USERNAME'),
        secret('test-homeoffice-generic-password', 'TEST_HOMEOFFICE_GENERIC_PASSWORD'),
        secret('test-citizen-username', 'TEST_CITIZEN_USERNAME'),
        secret('test-citizen-password', 'TEST_CITIZEN_PASSWORD'),
        secret('test-citizen-mobile', 'TEST_CITIZEN_MOBILE'),

        secret('home-office-end-appeal-email', 'IA_HOME_OFFICE_END_APPEAL_EMAIL'),
        secret('home-office-allowed-appeal-email', 'IA_HOME_OFFICE_ALLOWED_APPEAL_EMAIL'),
        secret('home-office-dismissed-appeal-email', 'IA_HOME_OFFICE_DISMISSED_APPEAL_EMAIL'),

        secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
        secret('idam-secret', 'IA_IDAM_SECRET'),
        secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
        secret('s2s-secret', 'IA_S2S_SECRET'),
        secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
        secret('ccd-url', 'CCD_URL'),
        secret('dm-url', 'DM_URL'),
        secret('idam-url', 'IDAM_URL'),
        secret('s2s-url', 'S2S_URL')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withPipeline(type, product, component) {
    enableDockerBuild()
    installCharts()
    enableAksStagingDeployment()
    disableLegacyDeployment()

    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    enableSlackNotifications('#ia-tech')
}
